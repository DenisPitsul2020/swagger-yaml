openapi: 3.0.0
info:
  title: OpenData API
  description: OpenData RESTful Server API
  version: 16.0.0
servers:
  - url: "http://192.168.1.14:8888"

paths:
  /device:
    get:
      tags:
        - device
      description: |
        Return a description of all instantiated devices, with a limit/offset pagination mechanism for large installations. An enclosed "id" can be used as a unique identifier useful to differentiate individual OpenData devices.

        For every configured device within OpenData return a Device JSON structure.

        Optional parameters: hasAnExternalId, clientId, deviceId, location, serviceId, limit, offset. If multiple parameters are present returned device must meet all of them.
      parameters:
        - in: query
          name: hasAnExternalId
          schema:
            type: boolean
          description: When hasAnExternalId=true, return all configured devices with a non-empty External ID.
        - in: query
          name: clientId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices.
        - in: query
          name: deviceId
          schema:
            type: string
          description: A numeric value identifying a device, that is unique across all objects within an OpenData instance.
        - in: query
          name: location
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to support segregation of devices by their location.
        - in: query
          name: serviceId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to support segregation of devices by the services they support.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devicesResponse"
  /serviceDetail:
    get:
      tags:
        - serviceDetail
      description: |
        Return the latest “published” point measurements for all devices of interest to the specified client.  If a device does not have any published points, do not return any points.

        For every OpenData monitored device that NetSuite has authorized the specified client to access, return a ServiceDetail JSON structure.

        Required parameter: clientId.

        Optional parameters: deviceId, location, serviceId, deviceType, limit, offset. If multiple parameters are present returned device must meet all of them.
      parameters:
        - in: query
          name: clientId
          required: true
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices.
        - in: query
          name: deviceId
          schema:
            type: string
          description: A numeric value identifying a device, that is unique across all objects within an OpenData instance.
        - in: query
          name: location
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to support segregation of devices by their location.
        - in: query
          name: serviceId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to support segregation of devices by the services they support.
        - in: query
          name: deviceType
          schema:
            type: string
          description: Type of device.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/devicesResponse"
  /trend:
    get:
      tags:
        - trend
      description: |
        Return the latest collected point measurement and aggregated point value metrics for all devices of interest to the specified client. If a device does not have any published points, do not return any points.

        For each point requested, a Devices JSON structure is returned containing aggregated points with latest collected measurement and aggregated values with the requested frequency, within the requested interval.

        Required parameters: clientId, frequency, startTime, stopTime.

        Optional parameters: location, serviceId, deviceId, deviceType, pointId, limit, offset.
      parameters:
        - in: query
          name: clientId
          required: true
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices.
        - in: query
          name: frequency
          required: true
          schema:
            type: string
            enum: [hourly, daily, weekly, monthly]
            default: "hourly"
          description: "One of hourly, daily, weekly or monthly."
        - in: query
          name: startTime
          required: true
          schema:
            type: string
            format: date-time
            example: "2021-01-01T00:00:00+02:00"
          description: "Pattern = 'yyyymmdd'T'hhmmssZ' as all values are in UTC. Where Z is an offset following the following RegEx: [+|-][0-9]{2}:[0-9]{2}. For example: -04:00 or +05:00."
        - in: query
          name: stopTime
          required: true
          schema:
            type: string
            format: date-time
            example: "2022-01-01T00:00:00+02:00"
          description: "Pattern = 'yyyymmdd'T'hhmmssZ' as all values are in UTC. Where Z is an offset following the following RegEx: [+|-][0-9]{2}:[0-9]{2}. For example: -04:00 or +05:00."
        - in: query
          name: location
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to support segregation of devices by their location.
        - in: query
          name: serviceId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to support segregation of devices by the services they support.
        - in: query
          name: deviceId
          schema:
            type: string
          description: A numeric value identifying a device, that is unique across all objects within an OpenData instance.
        - in: query
          name: deviceType
          schema:
            type: string
          description: Type of device.
        - in: query
          name: pointId
          schema:
            type: string
          description: A numeric value identifying a point, that is unique across all objects withing an OpenData instance.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/trendResponse"
  /auth-token/token/login:
    post:
      tags:
        - event
      description: "Return an JSON Event array of a single active events of the designated severity level: SEV1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authTokenRequest'
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authTokenResponse"
        404:
          description: Method hasn't implemented yet.
  /event:
    get:
      tags:
        - event
      description: |
        Return an array of all active events of the designated severity.

        Return an JSON Event array of all active events of the designated severity level: 'none', 'low', 'medium', 'high' or any added-custom severity. As large OpenData installations can contain very large number of active events.

        Optional parameter: severity, active> (true, false, or omit), ck> (true, false, or omit), clientId (from NetSuite_Device_Map table), externalId (from device object), deviceId, eventId.
      parameters:
        - in: query
          name: severity
          schema:
            type: string
            enum: [none, low, medium, high]
            default: "none"
          description: One of none, low, medium, high or any added-custom severity.
        - in: query
          name: active
          schema:
            type: boolean
          description: When acive=true, return all actve events
        - in: query
          name: ack
          schema:
            type: boolean
          description: When acked=true, return all acked events
        - in: query
          name: clientId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices. From NetSuite_Device_Map table
        - in: query
          name: externalId
          schema:
            type: string
          description: ExternalID from device object.
        - in: query
          name: deviceId
          schema:
            type: string
          description: A numeric value identifying a device, that is unique across all objects within an OpenData instance.
        - in: query
          name: eventId
          schema:
            type: string
          description: A numeric value identifying an event, that is unique across all objects withing an OpenData instance.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventResponse"
        404:
          description: Method hasn't implemented yet.
    post:
      tags:
        - event
      description: "Return an JSON Event array of a single active events of the designated severity level: SEV1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventRequest'
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventResponse"
        404:
          description: Method hasn't implemented yet.
    put:
      tags:
        - event
      description: Return an JSON Event array when an existing SEV1 event’s status has changed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/eventRequest'
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/eventResponse"
        404:
          description: Method hasn't implemented yet.
  /report:
    get:
      tags:
        - report
      description: |
        Return an escaped HTML page that will render an OpenData originated report.

        For the requested reportId return a JSON Report object containing an escaped HTML page which uses supporting
        libraries found in the reportingLibrary. Required parameters: reportId, reportingLibrar.

        Optional parameters: overrideStartDate, overrideEndDate.

        Note: The report data will be returned in the
        server timezone. overrideStartDate and overrideEndDate can be using other timezones, but this will not effect the report data timezone.
      parameters:
        - in: query
          name: reportId
          required: true
          schema:
            type: string
          description: A numeric value identifying a report, that is unique across all objects within an OpenData instance.
        - in: query
          name: reportingLibrary
          required: true
          schema:
            type: string
          description: "Note that all report library locations have been changed from '/opendata/' to the '<reportingLibrary>' string found in the request."
        - in: query
          name: overrideStartDate
          required: true
          schema:
            type: string
            format: date-time
            example: "2021-01-01T00:00:00+02:00"
          description: "Pattern = 'yyyymmdd'T'hhmmssZ' as all values are in UTC. Where Z is an offset following the following RegEx: [+|-][0-9]{2}:[0-9]{2}. For example: -04:00 or +05:00. Pattern = 'yyyy-MM-ddThh:mm:ss+hh:mm'"
        - in: query
          name: overrideEndDate
          required: true
          schema:
            type: string
            format: date-time
            example: "2022-01-01T00:00:00+02:00"
          description: "Pattern = 'yyyymmdd'T'hhmmssZ' as all values are in UTC. Where Z is an offset following the following RegEx: [+|-][0-9]{2}:[0-9]{2}. For example: -04:00 or +05:00. Pattern = 'yyyy-MM-ddThh:mm:ss+hh:mm'"
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reportResponse"
  /map:
    post:
      tags:
        - map
      description: |
        This request will create or update records in the following table:

        CREATE TABLE [EG].[NETSUITE_OBJ_MAP](
          [CLIENT_ID] [varchar](64) NOT NULL,
               [CLIENT_NAME] [varchar] (64) NULL,
          [OBJ_ID] [dbo].[DOM_IDENT_REQ] NOT NULL,
          [SERVICE_ID] [varchar](64) NULL,
          [LOCATION] [varchar](64) NULL,
               [SERVICE_START_DATE] [datetime] NOT NULL,
               [SERVICE_END_DATE] [datetime] NULL,
          [EFFECTIVE_DATE] [datetime] NOT NULL,
          [DELETED] [dbo].[DOM_BOOLEAN] NOT NULL
        ) ON [PRIMARY]

        Primary key: CLIENT_ID, OBJ_ID,  EFFECTIVE_DATE

        This table will keep history of changes.  Only record with the newest EFFECTIVE_DATE is active.  If the record with the newest EFFECTIVE_DATE is DELETED, there is no active records.  OBJ_ID is synonym for device id.  SERVICE_START_DATE and SERVICE_END_DATE indicate the period when OBJ_ID is associated with the CLIENT_ID.

        EFFECTIVE_DATE field is generated by the server and records the record insert time.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mapRequest'
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mapResponse"
  /asset:
    get:
      tags:
        - asset
      description: |
        For every configured asset within OpenData return an Asset JSON structure. As large OpenData installations can contain 10,000s of devices, an optional limit/offset pagination mechanism is supported.

        Optional parameters: clientId, assetId, limit, offset.
      parameters:
        - in: query
          name: clientId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices.
        - in: query
          name: asssetId
          schema:
            type: string
          description: A unique identifier of asset.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assetResponse"
  /circuit:
    get:
      tags:
        - circuit
      description: |
        For every configured circuit within OpenData return a Circuit JSON structure. As large OpenData installations can contain 10,000s of devices, an optional limit/offset pagination mechanism is supported.

        Optional parameters: clientId, circuitId, limit, offset.
      parameters:
        - in: query
          name: clientId
          schema:
            type: string
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices.
        - in: query
          name: circuitId
          schema:
            type: string
          description: A unique identifier of circuit.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/circuitResponse"
  /ticket:
    get:
      tags:
        - ticket
      description: |
        For every ticket within OpenData return a ticket JSON structure. An optional limit/offset pagination mechanism is supported.

        Optional parameters: modifiedFrom, modifiedTo, hasExternalTicketId, statusId, clientId, typeId, urgencyLevelId, internalTicketId, externalTicketId, parentTicketId, limit, offset.
      parameters:
        - in: query
          name: modifiedFrom
          schema:
            type: string
          description: "-"
        - in: query
          name: modifiedTo
          schema:
            type: string
          description: "-"
        - in: query
          name: hasExternalTicketId
          schema:
            type: integer
          description: When hasAnExternalId=true, return all configured devices with a non-empty External ID.
        - in: query
          name: statusId
          schema:
            type: integer
          description: A unique identifier of status.
        - in: query
          name: clientId
          schema:
            type: integer
          description: A unique identifier generated by NetSuite used to identify a client who will be given access to a set of OpenData monitored devices.
        - in: query
          name: typeId
          schema:
            type: integer
          description: Type id.
        - in: query
          name: urgencyLevelId
          schema:
            type: integer
          description: Urgency level id.
        - in: query
          name: internalTicketId
          schema:
            type: integer
          description: Intelnal ticket id.
        - in: query
          name: externalTicketId
          schema:
            type: integer
          description: External ticket id.
        - in: query
          name: parentTicketId
          schema:
            type: integer
          description: Parent ticket id.
        - in: query
          name: limit
          schema:
            type: integer
          description: Max number of devices to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set.
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getTicketResponse"
    post:
      tags:
        - ticket
      description: NetSuite can add new tickets in OpenData via a POST request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postTicketRequest'
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postTicketResponse"
    put:
      tags:
        - ticket
      description: NetSuite can update tickets in OpenData via PUT request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putTicketRequest'
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/putTicketResponse"
  /posts:
    get:
      tags:
        - event
      description: "Return an JSON Event array of a single active events of the designated severity level: SEV1"
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/authTokenResponse"
        404:
          description: Method hasn't implemented yet.

components:
  schemas:
    devicesResponse:
      type: object
      properties:
        devices:
          type: array
          items:
            properties:
              id:
                type: integer
                example: 2993
              name:
                type: string
                example: OpenData Analytics DB Collector
              isCollecting:
                type: boolean
                example: true
              pollFrequency:
                type: integer
                example: 60000
              deviceType:
                type: string
                example: Programmable Logic Controller
              location:
                type: string
                example: null
              assetNumber:
                type: string
                example: 1604266072964973838
              externalId:
                type: string
                example: -7196268240620956849
              points:
                type: array
                example: []
              alarms:
                type: array
                example: []
    trendResponse:
      type: object
      properties:
        clientId:
          type: integer
          example: 1
        startTime:
          type: string
          example: "2021-01-01T00:00:00-02:00"
        stopTime:
          type: string
          example: "2022-01-01T00:00:00-02:00"
        frequency:
          type: string
          example: "hourly"
        devices:
          type: array
          items:
            properties:
              id:
                type: integer
                example: 2993
              name:
                type: string
                example: OpenData Analytics DB Collector
              isCollecting:
                type: boolean
                example: true
              pollFrequency:
                type: integer
                example: 60000
              deviceType:
                type: string
                example: Programmable Logic Controller
              location:
                type: string
                example: null
              assetNumber:
                type: string
                example: 1604266072964973838
              externalId:
                type: string
                example: -7196268240620956849
              points:
                type: array
                example: []
              alarms:
                type: array
                example: []
    eventRequest:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Event Name
        AlarmId:
          type: string
          example: 1
        eventState:
          type: string
          example: Event state
        severiry:
          type: string
          example: low
        device:
          type: object
          properties:
            id:
              type: integer
              example: 2993
            name:
              type: string
              example: OpenData Analytics DB Collector
            deviceType:
              type: string
              example: Programmable Logic Controller
            externalId:
              type: integer
              example: -6431107989410522626
        clients:
          type: array
          items:
            properties:
              clientId:
                type: integer
                example: 1
              clientName:
                type: string
                example: Client name
              serviceId:
                type: string
                example: 1
              location:
                type: string
                example: location
    eventResponse:
      type: object
      example: {}
    reportResponse:
      type: object
      properties:
        resultInfo:
          type: object
          properties:
            timezoneOffset:
              type: string
              example: "+02:00"
            startDate:
              type: string
              example: "2021-01-01T00:00:00+02:00"
            endDate:
              type: string
              example: "2022-01-01T00:00:00+02:00"
            duration:
              type: string
              example: "0.28s"
            totalCount:
              type: integer
              example: 1
            successCount:
              type: integer
              example: 2
            warningCount:
              type: integer
              example: 0
            errorCount:
              type: integer
              example: 0
            message:
              type: string
              example: ""
        id:
          type: integer
          example: 4069453
        reportHTML:
          type: string
          example: "Html text document"
        reportData:
          type: object
          example: {}
    mapRequest:
      type: array
      items:
        properties:
          clientId:
            type: integer
            example: 1
          objId:
            type: integer
            example: 2
          serviceStartDate:
            type: string
            example: "2021-10-31T01:00:00-00:00"
    mapResponse:
      type: object
      properties:
        startDate:
          type: string
          example: "2021-03-04T15:28:19"
        endDate:
          type: string
          example: "2022-03-04T15:28:19"
        duration:
          type: string
          example: "0.02s"
        totalCount:
          type: integer
          example: 1
        successCount:
          type: integer
          example: 1
        failureCount:
          type: integer
          example: 0
        warningCount:
          type: integer
          example: 0
        message:
          type: string
          example: null
        entries:
          type: array
          items:
            properties:
              clientId:
                type: integer
                example: 1
              clientName:
                type: string
                example: null
              objId:
                type: integer
                example: 2
              effectiveDate:
                type: string
                example: "2022-01-01T00:00:00"
              serviceId:
                type: string
                example: null
              serviceStartDate:
                type: string
                example: "2022-01-01T00:00:00"
              serviceEndDate:
                type: string
                example: null
              location:
                type: string
                example: null
              deleted:
                type: boolean
                example: null
              _Status:
                type: string
                example: "SUCCESS"
              _StatusMessage:
                type: string
                example: "Successfully inserted."
              deletedAsBit:
                type: integer
                example: 0
    assetResponse:
      type: object
      properties:
        resultInfo:
          type: object
          properties:
            timezoneOffset:
              type: string
              example: "+02:00"
            startDate:
              type: string
              example: "2021-01-01T00:00:00+02:00"
            endDate:
              type: string
              example: "2022-01-01T00:00:00+02:00"
            duration:
              type: string
              example: "0.02s"
            totalCount:
              type: integer
              example: 0
            successCount:
              type: integer
              example: 0
            warningCount:
              type: integer
              example: 0
            errorCount:
              type: integer
              example: 0
            message:
              type: string
              example: ""
        circuits:
          type: array
          items: {}
    circuitResponse:
      type: object
      properties:
        resultInfo:
          type: object
          properties:
            timezoneOffset:
              type: string
              example: "Z"
            startDate:
              type: string
              example: "2021-01-01T00:00:00Z"
            endDate:
              type: string
              example: "2021-01-01T00:00:00Z"
            duration:
              type: string
              example: "0.03s"
            totalCount:
              type: integer
              example: 0
            successCount:
              type: integer
              example: 0
            warningCount:
              type: integer
              example: 0
            errorCount:
              type: integer
              example: 0
            message:
              type: string
              example: ""
        assets:
          type: array
          items: {}
    getTicketResponse:
      type: object
      properties:
        resultInfo:
          type: object
          properties:
            timezoneOffset:
              type: string
              example: "Z"
            startDate:
              type: string
              example: "2021-01-01T00:00:00Z"
            endDate:
              type: string
              example: "2022-01-01T00:00:00Z"
            duration:
              type: string
              example: "0.03s"
            totalCount:
              type: integer
              example: 1
            successCount:
              type: integer
              example: 1
            warningCount:
              type: integer
              example: 0
            errorCount:
              type: integer
              example: 0
            message:
              type: string
              example: ""
        data:
          type: array
          items:
            properties:
              internalTicketId:
                type: integer
                example: 1
              externalTicketId:
                type: integer
                example: 1
              clientId:
                type: integer
                example: 1
              clientName:
                type: string
                example: "Client name"
              objId:
                type: integer
                example: null
              objTypeId:
                type: integer
                example: null
              objTypeName:
                type: string
                example: "Unknown"
              typeId:
                type: integer
                example: 1
              typeName:
                type: string
                example: "Helpdesk Ticket"
              statusId:
                type: integer
                example: 1
              statusName:
                type: string
                example: "New"
              parentTiketId:
                type: integer
                example: 1
              urgencyLevelId:
                type: integer
                example: 30
              urgencyLevelName:
                type: string
                example: "None"
              submissionDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              occurrenceDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              originationDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              startDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              dueDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              resolutionDate:
                type: string
                example: null
              modificationDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              submitterName:
                type: string
                example: "Administrator"
              assigneeName:
                type: string
                example: null
              totalWorkTimeInMin:
                type: integer
                example: 0
              subject:
                type: string
                example: "ticket_20220306024417_QJY"
              body:
                type: string
                example: "Description"
              workSummary:
                type: string
                example: "Work summary"
    postTicketRequest:
      type: array
      items:
        properties:
          externalTicketId:
            type: integer
            example: 1
          clientId:
            type: integer
            example: 1
          clientName:
            type: string
            example: "Client name"
          typeId:
            type: integer
            example: 1
          urgencyLevelId:
            type: integer
            example: 30
          originationDate:
            type: string
            example: "2022-01-01T00:00:00+00:00"
          subject:
            type: string
            example: "Subject"
          description:
            type: string
            example: "Description"
          startDate:
            type: string
            example: "2022-01-01T00:00:00+00:00"
          dueDate:
            type: string
            example: "2022-01-01T00:00:00+00:00"
          location:
            type: string
            example: "Location"
          contactName:
            type: string
            example: "Contact name"
          email:
            type: string
            example: "first.last@modius.com"
          phone:
            type: string
            example: "+1-234-567-8901"
          notes:
            type: string
            example: "Notes"
          impact:
            type: string
            example: "Impact"
          slaDeadline:
            type: string
            example: "SLA deadline"
          classification:
            type: string
            example: "Classification"
          type:
            type: string
            example: "Type"
          category:
            type: string
            example: "Category"
          reason:
            type: string
            example: "Reason"
    postTicketResponse:
      type: object
      properties:
        resultInfo:
          type: object
          properties:
            timezoneOffset:
              type: string
              example: "Z"
            startDate:
              type: string
              example: "2021-01-01T00:00:00Z"
            endDate:
              type: string
              example: "2022-01-01T00:00:00Z"
            duration:
              type: string
              example: "0.03s"
            totalCount:
              type: integer
              example: 0
            successCount:
              type: integer
              example: 1
            warningCount:
              type: integer
              example: 0
            errorCount:
              type: integer
              example: 0
            message:
              type: string
              example: ""
        data:
          type: array
          items:
            properties:
              statusInfo:
                type: object
                properties:
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Successfully inserted."
              externalTicketId:
                type: string
                example: "1"
              clientId:
                type: string
                example: "1"
              clientName:
                type: string
                example: "Client name"
              objId:
                type: integer
                example: null
              location:
                type: string
                example: "Location"
              typeId:
                type: integer
                example: 1
              urgencyLevelId:
                type: integer
                example: 30
              originationDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              startDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              dueDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              subject:
                type: string
                example: "Subject"
              contactName:
                type: string
                example: "Contact name"
              email:
                type: string
                example: "first.last@modius.com"
              phone:
                type: string
                example: "+1-234-567-8901"
              notes:
                type: string
                example: "Notes"
              impact:
                type: string
                example: "Impact"
              slaDeadline:
                type: string
                example: "SLA deadline"
              classification:
                type: string
                example: "Classification"
              type:
                type: string
                example: "Type"
              category:
                type: string
                example: "Category"
              reason:
                type: string
                example: "Reason"
              description:
                type: string
                example: "Description"
              externalTicketName:
                type: string
                example: null
              workDescription:
                type: string
                example: null
    putTicketRequest:
      type: array
      items:
        properties:
          externalTicketId:
            type: integer
            example: 1
          statusId:
            type: integer
            example: 1
          urgencyLevelId:
            type: integer
            example: 30
          startDate:
            type: string
            example: "2022-01-01T00:00:00+00:00"
          dueDate:
            type: string
            example: "2022-01-01T00:00:00+00:00"
    putTicketResponse:
      type: object
      properties:
        resultInfo:
          type: object
          properties:
            timezoneOffset:
              type: string
              example: "Z"
            startDate:
              type: string
              example: "2021-01-01T00:00:00Z"
            endDate:
              type: string
              example: "2022-01-01T00:00:00Z"
            duration:
              type: string
              example: "0.03s"
            totalCount:
              type: integer
              example: 0
            successCount:
              type: integer
              example: 1
            warningCount:
              type: integer
              example: 0
            errorCount:
              type: integer
              example: 0
            message:
              type: string
              example: ""
        data:
          type: array
          items:
            properties:
              statusInfo:
                type: object
                properties:
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Successfully updated."
              externalTicketId:
                type: string
                example: "1"
              statusId:
                type: string
                example: 1
              urgencyLevelId:
                type: integer
                example: 30
              startDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              dueDate:
                type: string
                example: "2022-01-01T00:00:00Z"
              workDescription:
                type: string
                example: null
    authTokenRequest:
      type: object
      properties:
        username:
          type: string
          example: manager1
        password:
          type: string
          example: andreandre1
    authTokenResponse:
      type: object
      example: {}













